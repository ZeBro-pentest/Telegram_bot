import os
import json
import re
from config import ADMIN_ID, THANKS_FOLDER
from utils.helpers import main_menu
from utils.storage import user_ids

# –ö–æ–º–∞–Ω–¥–∞	            –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
# /stats	            –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏–π, —Ñ–∞–π–ª–æ–≤)
# /clear	            –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã —Å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏—è–º–∏
# /broadcast	        –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
# /delete_broadcast	    –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ä–∞—Å—Å—ã–ª–∫—É —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# /exit	                –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ —Ç–µ–∫—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏)


# üìÅ –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
BROADCAST_LOG = "broadcast_log.json"

def register_admin_handlers(bot):
    broadcast_messages = []

    # ==================== üìä /stats ====================
    @bot.message_handler(commands=['stats'])
    def show_stats(message):
        if message.from_user.id != ADMIN_ID:
            return bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

        total_thanks = 0
        total_days = 0

        if os.path.exists(THANKS_FOLDER):
            for fn in os.listdir(THANKS_FOLDER):
                if not fn.endswith(".txt"):
                    continue

                path = os.path.join(THANKS_FOLDER, fn)
                try:
                    with open(path, "r", encoding="utf-8") as f:
                        content = f.read().strip()
                except Exception:
                    continue

                # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –¥–≤—É–º –ø—É—Å—Ç—ã–º —Å—Ç—Ä–æ–∫–∞–º
                entries = [x.strip() for x in re.split(r"\n\s*\n", content) if x.strip()]
                if entries:
                    total_days += 1
                    total_thanks += len(entries)

        users_count = len(user_ids)

        bot.send_message(
            message.chat.id,
            f"üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n"
            f"üíå –ë–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏–π: <b>{total_thanks}</b>\n"
            f"üìÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: <b>{total_days}</b>\n"
            f"üë• –í –æ–±—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{users_count}</b>",
            parse_mode="HTML",
            reply_markup=main_menu()
        )

    # ==================== üßπ /clear ====================
    @bot.message_handler(commands=['clear'])
    def clear_data(message):
        if message.from_user.id != ADMIN_ID:
            return bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

        if not os.path.exists(THANKS_FOLDER):
            return bot.send_message(message.chat.id, "‚ÑπÔ∏è –ü–∞–ø–∫–∞ —Å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏—è–º–∏ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞.")

        deleted = 0
        for fn in os.listdir(THANKS_FOLDER):
            if fn.startswith("thanks_") and fn.endswith(".txt"):
                try:
                    os.remove(os.path.join(THANKS_FOLDER, fn))
                    deleted += 1
                except Exception:
                    pass

        bot.send_message(
            message.chat.id,
            f"üßπ –í—Å–µ –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã ({deleted} —Ñ–∞–π–ª–æ–≤).",
            reply_markup=main_menu()
        )

    # ==================== üì¢ /broadcast ====================
    @bot.message_handler(commands=['broadcast'])
    def broadcast(message):
        if message.from_user.id != ADMIN_ID:
            return bot.send_message(message.chat.id, "‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ (–∏–ª–∏ /exit –¥–ª—è –æ—Ç–º–µ–Ω—ã):")
        bot.register_next_step_handler(message, send_broadcast)

    def send_broadcast(message):
        if message.from_user.id != ADMIN_ID:
            return

        # –û—Ç–º–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
        if message.text and message.text.strip().lower() == "/exit":
            bot.send_message(message.chat.id, "‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu())
            return

        text = (message.text or "").strip()
        if not text:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
            return

        sent = 0
        broadcast_messages.clear()

        for uid in list(user_ids):
            try:
                msg = bot.send_message(uid, f"üì¢ {text}")
                broadcast_messages.append({"user_id": uid, "message_id": msg.message_id})
                sent += 1
            except Exception:
                pass

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ message_id –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è
        with open(BROADCAST_LOG, "w", encoding="utf-8") as f:
            json.dump(broadcast_messages, f, ensure_ascii=False, indent=2)

        bot.send_message(
            message.chat.id,
            f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\nüì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: <b>{sent}</b> —Å–æ–æ–±—â–µ–Ω–∏–π.",
            parse_mode="HTML",
            reply_markup=main_menu()
        )

    # ==================== üóëÔ∏è /delete_broadcast ====================
    @bot.message_handler(commands=['delete_broadcast'])
    def delete_broadcast(message):
        if message.from_user.id != ADMIN_ID:
            return bot.send_message(message.chat.id, "‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

        if not os.path.exists(BROADCAST_LOG):
            return bot.send_message(message.chat.id, "‚ÑπÔ∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

        with open(BROADCAST_LOG, "r", encoding="utf-8") as f:
            data = json.load(f)

        removed = 0
        for entry in data:
            try:
                bot.delete_message(entry["user_id"], entry["message_id"])
                removed += 1
            except Exception:
                pass

        os.remove(BROADCAST_LOG)
        bot.send_message(
            message.chat.id,
            f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {removed} —Å–æ–æ–±—â–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
            reply_markup=main_menu()
        )

    # ==================== üö´ /exit ‚Äî –æ—Ç–º–µ–Ω–∞ –ª—é–±–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è ====================
    @bot.message_handler(commands=['exit'])
    def cancel_action(message):
        if message.from_user.id != ADMIN_ID:
            return bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        bot.send_message(message.chat.id, "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=main_menu())
